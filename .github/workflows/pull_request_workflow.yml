# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ### TESTS JOBS
  tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1 # ensure the sequential running of the spawned jobs
      matrix:
        # order matters: spawned jobs are execute as received in the array
        test-type: ['fast-test', 'slow-and-fast-test']
        include:
          # includes the value of the rebase variable depending on the test type of the matrix
          # includes the dependency between the 2 generated jobs to ensure sequential runs
          - test-type: 'fast-test'
            mvn-test-group: 'fast-test'
            rebase: false
            merge: false
          - test-type: 'slow-and-fast-test'
            mvn-test-group: 'fast-test,slow-test'
            rebase: true
            merge: true
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
#      - name: Set up JDK 1.1
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#      - name: Rebase
#        if: ${{ matrix.rebase }}
#        run: |
#          git fetch
#          git checkout main
#          git rebase main || git rebase --abort
##          # rebase on main branch
##          exists=`git show-ref refs/heads/main`
##          if [ -n "$exists" ]; then
##            echo 'branch exists!'
##          fi
##          git fetch
##          git checkout -b main origin/main
##          git rebase main || git rebase --abort
#      - name: Run tests with Maven
#        run: mvn -B test -Dgroups=${{ matrix.mvn-test-group }}

#  automerge:
#    if: github.event.review.state == 'approved' || !github.event.review
#    needs: tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: reitermarkus/automerge@v1
#        with:
#          token: ${{ secrets.MERGE_PAL_TOKEN }}
##          merge-method: merge
#          do-not-merge-labels: never-merge
##          required-labels: automerge
##          pull-request: ${{ github.event.inputs.pull-request }}
#          dry-run: true


#  merge:
#    needs:
#      - 'tests'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#
#      - uses: maxkomarychev/merge-pal-action@v0.5.1
#        with:
#          token: ${{ secrets.MERGE_PAL_TOKEN }}
