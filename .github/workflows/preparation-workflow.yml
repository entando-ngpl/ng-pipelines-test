# This workflow will prepare every thing required to proceed with a PR
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Preparation

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [ main ]

jobs:
  prepare:
    env:
      CLONE_URL: ${{ github.event.base.repo.clone_url }}
      BRANCH_NAME: ${{ github.head_ref }}
    runs-on: ubuntu-latest
    steps:
#      - name: "Checkout"
#        uses: actions/checkout@v2
#        with:
#          ref: ${{ github.event.pull_request.head.sha }}
#      - uses: nelonoel/branch-name@v1.0.1
          # Use branch name for whatever purpose
#      - run: echo ${BRANCH_NAME}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Checkout
#        env:
#          CLONE_URL: ${{ github.repositoryUrl }}
#          BRANCH_NAME: ${{ github.head_ref }}
        run: |
          echo "######### $CLONE_URL"
          git clone "$CLONE_URL" repo_folder
          cd repo_folder
          git checkout -b "$BRANCH_NAME"
          git status || true
      - name: "Guard file update"
        run: |
          git config --global user.email "cicd@entando.com"
          git config --global user.name "firegloves"
          cd repo_folder
          hash=$(sha256sum<<<"${GITHUB_REF}")
          echo "$hash" > guard
          # ---- add existence check
          git add guard
          git commit guard -m 'guard file update'
          # git push
          echo "######### branch ${BRANCH_NAME}"
          git push origin HEAD:${BRANCH_NAME}
          echo 'Guard file updated'
      - name: "BOM update"
        run: echo 'BOM updated'
